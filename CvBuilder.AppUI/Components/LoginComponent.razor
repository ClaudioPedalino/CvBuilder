@using CvBuilder.AppUI.Clients;
@using CvBuilder.AppUI.Models.Queries;

@inject IUserServiceClient _client;

<h3>LoginComponent</h3>

<div class="card">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="model.Email" class="form-control" />
                <ValidationMessage For="@(() => model.Email)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="model.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => model.Password)" />
            </div>
            <button disabled="@loading" class="btn btn-primary">
                @if (loading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Login
            </button>
            <NavLink href="account/register" class="btn btn-link">Register</NavLink>
        </EditForm>
    </div>

    <ul>
        <li>@token</li>
    </ul>

</div>


@code {
    private bool loading;
    private LoginQuery model = new LoginQuery();
    private string token = "test";

    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    private async void OnValidSubmit()
    {
        // reset alerts on submit
        //AlertService.Clear();

        loading = true;

        var result = await _client.Login(model);
        if (result.Success)
        {
            token = result.Token;
        }
        else
        {

        }
        loading = false;

        shouldRender = true;
    }
}
